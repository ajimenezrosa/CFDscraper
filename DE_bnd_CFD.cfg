"""
Config file for CFDscraper

Name: US bond rate CFDs

Source description:

investing.com hosts streaming rates for a number of instruments, including
bond rates and world stock indicies.

Quality:

This source skirts data license restrictions by using CFD data from off-
exchange bucket shops. Since rate data from bucket shops needs to be close
to the real value to avoid creating arbitrage opportunites, I suspect the
data is quite accurate.

Note 1: For now I am leaving the 10-year row because it is already covered
by the World_Bonds.cfg.

Note 2: THis is a subset of the data available on the page.

Rate:
Data is updated every 10 seconds.

TODO:
The folks at investing.com have switched from "Germany 1-Year" to
"Germany 1-Y". I changed it here but it would be nice if the DF look up
was intelligent enough to figure this out all by itself. 
"""
dataname = 'DE_bnd_CFD'
logpath = dataname + '_scrape.log'

chromepath = '/Users/jonathanamorris/Code/chromedriver'

browser_choice = 'phantomjs'  # Choose chrome, firefox, or phantomjs
phantom_log_path = dataname + '_phantomjs.log'

# Database info:
db_host = 'dataserve.local'
db_user = 'jonathan'
db_pass = "poop"
db_name = 'mydb'
db_dialect = 'mysql+pymysql'

# Page info:
page_source_timeout = 5  # int() in seconds. How long before driver refresh.
browser_lifetime = 1680  # In seconds. 14400 is four hours.
base_url = 'http://www.investing.com'
url_string = base_url + '/rates-bonds/germany-government-bonds?maturity_from=10&maturity_to=290'
web_tz = 'GMT'

# Table info:
attribute = {'id': 'cr1'}
time_col = "UTCTime"
row_title_column = 'Pair'  # Need this to know index column.
refresh_rate = 10.5  # Minimum number of seconds between scrapes.

# Construct table form:
# bootstrap = (db_table_name,
#         ((db_column1_name, web_row_string, web_col_string),
#         (db_column2_name, web_row_string, web_col_string)))
# Timestamp column name is special and will be made primary key
# All others will be Float by default.
# The timestamp column, whatever its dytpe, must be the first for
# everything to work.

###### Tables list ############################################################

bootstrap_list = []

bootstrap1 = ("DE_1m_bnd_CFD",
             (("UTCTime", "Germany 1M", "Time"),
              ("Value", "Germany 1M", "Yield")))
bootstrap_list.append(bootstrap1)

bootstrap2 = ("DE_3m_bnd_CFD",
             (("UTCTime", "Germany 3M", "Time"),
              ("Value", "Germany 3M", "Yield")))
bootstrap_list.append(bootstrap2)

bootstrap3 = ("DE_6m_bnd_CFD",
             (("UTCTime", "Germany 6M", "Time"),
              ("Value", "Germany 6M", "Yield")))
bootstrap_list.append(bootstrap3)

bootstrap4 = ("DE_1y_bnd_CFD",
             (("UTCTime", "Germany 1Y", "Time"),
              ("Value", "Germany 1Y", "Yield")))
bootstrap_list.append(bootstrap4)

bootstrap5 = ("DE_2y_bnd_CFD",
             (("UTCTime", "Germany 2Y", "Time"),
              ("Value", "Germany 2Y", "Yield")))
bootstrap_list.append(bootstrap5)

bootstrap6 = ("DE_3y_bnd_CFD",
             (("UTCTime", "Germany 3Y", "Time"),
              ("Value", "Germany 3Y", "Yield")))
bootstrap_list.append(bootstrap6)

bootstrap7 = ("DE_5y_bnd_CFD",
             (("UTCTime", "Germany 5Y", "Time"),
              ("Value", "Germany 5Y", "Yield")))
bootstrap_list.append(bootstrap7)

bootstrap8 = ("DE_7y_bnd_CFD",
             (("UTCTime", "Germany 7Y", "Time"),
              ("Value", "Germany 7Y", "Yield")))
bootstrap_list.append(bootstrap8)

bootstrap9 = ("DE_30y_bnd_CFD",
             (("UTCTime", "Germany 30Y", "Time"),
              ("Value", "Germany 30Y", "Yield")))
bootstrap_list.append(bootstrap9)

# bootstrap_list.sort()
